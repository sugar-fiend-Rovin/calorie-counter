{"version":3,"sources":["Food-Query.js","components/foodItem.jsx","components/journalItem.jsx","context/auth.js","components/journal.jsx","components/login.jsx","components/register.jsx","components/home.jsx","components/button.jsx","util/DynamicRoute.js","App.js","serviceWorker.js","index.js"],"names":["gql","UserQuery","EntryQuery","FoodQuery","AddEntry","DeleteEntry","AddQuantity","MinusQuantity","REGISTER_USER","LOGIN_USER","FoodItem","Food","food_name","calories","type","carbohydrates","proteins","fats","date","useMutation","refetchQueries","createEntry","data","Row","className","style","height","Col","Button","variant","onClick","variables","food_entry","quantity","context","headers","authentication","localStorage","getItem","icon","faPlus","JournalItem","count","deleteEntry","data3","addQuantity","data2","update","cache","qe","console","log","updateEntryMinus","minusQuantity","faMinus","marginRight","faTimes","AuthStateContext","createContext","AuthDispatchContext","user","token","decodedToken","jwtDecode","expiresAt","Date","exp","removeItem","authReducer","state","action","setItem","payload","Error","AuthProvider","children","useReducer","dispatch","Provider","value","useAuthDispatch","useContext","Journal","props","ItemsContext","useState","undefined","useQuery","format","pollInterval","loading","error","breakfast","getEntries","filter","food","food_en","breakfast_sum","reduce","result","item","lunch","lunch_sum","dinner","dinner_sum","total_calories","total_carbs","total_fat","total_protein","backgroundColor","map","key","id","Register","username","password","setVariables","errors","setErrors","useLazyQuery","onError","err","graphQLErrors","extensions","onCompleted","login","history","push","loginUser","sm","md","lg","Form","onSubmit","e","preventDefault","Group","Label","Control","onChange","target","disabled","to","email","confirmPassword","_","__","registerUser","React","Home","moment","setCount","getUser","newarray","entry","query","getFoods","includes","Example","marginBottom","ButtonGroup","aria-label","subtract","faArrowLeft","trigger","position","onSelect","width","disabledDays","faArrowRight","DynamicRoute","authenticated","guest","component","App","Container","exact","path","Login","Boolean","window","location","hostname","match","httpLink","createHttpLink","uri","authLink","setContext","client","ApolloClient","link","concat","InMemoryCache","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.be0c8c33.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nconst FoodQueryS = gql`\r\n  query($name: String!) {\r\n    getFood(food_name: $name) {\r\n      food_name\r\n      type\r\n      calories\r\n      carbohydrates\r\n      proteins\r\n      fats\r\n    }\r\n  }\r\n`;\r\nconst UserQuery = gql`\r\n  query {\r\n    getUser {\r\n      id\r\n      email\r\n      username\r\n      daily_calories\r\n      carbohydrates\r\n      proteins\r\n      fats\r\n    }\r\n  }\r\n`;\r\nconst EntryQuery = gql`\r\n  query($date: String!) {\r\n    getEntries(date: $date) {\r\n      username\r\n      food_entry\r\n      date\r\n      quantity\r\n      food_en {\r\n        food_name\r\n        type\r\n        calories\r\n        carbohydrates\r\n        proteins\r\n        fats\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst FoodQuery = gql`\r\n  query {\r\n    getFoods {\r\n      food_name\r\n      type\r\n      calories\r\n      carbohydrates\r\n      proteins\r\n      fats\r\n    }\r\n  }\r\n`;\r\n// const EntryQueryS = gql`\r\n//   query($name: String!) {\r\n//     getEntry(food_entry: $name) {\r\n//       food_entry\r\n//       date\r\n//       quantity\r\n//       food_en {\r\n//         food_name\r\n//         type\r\n//         calories\r\n//         carbohydrates\r\n//         proteins\r\n//         fats\r\n//       }\r\n//     }\r\n//   }\r\n// `;\r\nconst AddFood = gql`\r\n  mutation(\r\n    $food_name: String!\r\n    $type: String!\r\n    $calories: Float!\r\n    $carbohydrates: Float!\r\n    $proteins: Float!\r\n    $fats: Float!\r\n  ) {\r\n    addFood(\r\n      food_name: $food_name\r\n      type: $type\r\n      calories: $calories\r\n      carbohydrates: $carbohydrates\r\n      proteins: $proteins\r\n      fats: $fats\r\n    ) {\r\n      food_name\r\n      type\r\n      calories\r\n      carbohydrates\r\n      proteins\r\n      fats\r\n    }\r\n  }\r\n`;\r\nconst AddEntry = gql`\r\n  mutation($food_entry: String!, $date: String!, $quantity: Float!) {\r\n    createEntry(food_entry: $food_entry, date: $date, quantity: $quantity) {\r\n      food_entry\r\n      date\r\n      quantity\r\n    }\r\n  }\r\n`;\r\nconst AddUser = gql`\r\n  mutation($name: String!) {\r\n    addUser(username: $name) {\r\n      username\r\n    }\r\n  }\r\n`;\r\nconst DeleteEntry = gql`\r\n  mutation($food_entry: String!, $date: String!) {\r\n    deleteEntry(food_entry: $food_entry, date: $date)\r\n  }\r\n`;\r\nconst AddQuantity = gql`\r\n  mutation($food_entry: String!, $date: String!) {\r\n    updateEntryPlus(food_entry: $food_entry, date: $date) {\r\n      food_entry\r\n      date\r\n      quantity\r\n    }\r\n  }\r\n`;\r\n\r\nconst MinusQuantity = gql`\r\n  mutation($food_entry: String!, $date: String!) {\r\n    updateEntryMinus(food_entry: $food_entry, date: $date) {\r\n      food_entry\r\n      date\r\n      quantity\r\n    }\r\n  }\r\n`;\r\n// const LOGIN_USER = gql`\r\n//   mutation login($username: String!, $password: String!) {\r\n//     login(username: $username, password: $password) {\r\n//       id\r\n//       email\r\n//       username\r\n//       token\r\n//     }\r\n//   }\r\n// `;\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $username: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      username: $username\r\n      email: $email\r\n      password: $password\r\n      confirmPassword: $confirmPassword\r\n    ) {\r\n      username\r\n      email\r\n    }\r\n  }\r\n`;\r\nconst LOGIN_USER = gql`\r\n  query login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      username\r\n      email\r\n      token\r\n    }\r\n  }\r\n`;\r\nexport {\r\n  AddUser,\r\n  EntryQuery,\r\n  UserQuery,\r\n  FoodQueryS,\r\n  FoodQuery,\r\n  AddFood,\r\n  AddEntry,\r\n  AddQuantity,\r\n  MinusQuantity,\r\n  // EntryQueryS,\r\n  DeleteEntry,\r\n  LOGIN_USER,\r\n  REGISTER_USER,\r\n};\r\n","import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { useMutation, useContext } from \"@apollo/client\";\r\nimport moment from \"moment\";\r\nimport { ItemsContext } from \"./../App\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./foodItem.css\";\r\nimport { AddEntry } from \"../Food-Query\";\r\n\r\nexport default function FoodItem({\r\n  Food: { food_name, type, calories, carbohydrates, proteins, fats },\r\n  date,\r\n}) {\r\n  const [createEntry, { data }] = useMutation(AddEntry, {\r\n    refetchQueries: [\"EntryQuery\"],\r\n  });\r\n\r\n  return (\r\n    <Row className=\" align-items-center border-col \" style={{ height: \"50px\" }}>\r\n      <Col>{food_name}</Col>\r\n      <Col>{carbohydrates}</Col>\r\n      <Col>{fats}</Col>\r\n      <Col>{proteins}</Col>\r\n      <Col>{calories}</Col>\r\n      <Col>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() =>\r\n            createEntry({\r\n              variables: {\r\n                food_entry: food_name,\r\n                date: date,\r\n                quantity: 1,\r\n              },\r\n              context: {\r\n                headers: {\r\n                  authentication: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n              },\r\n            })\r\n          }\r\n        >\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </Button>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faMinus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport \"./journalItem.css\";\r\nimport {\r\n  EntryQuery,\r\n  FoodQueryS,\r\n  EntryQueryS,\r\n  FoodQuery,\r\n  AddFood,\r\n  AddEntry,\r\n  AddQuantity,\r\n  MinusQuantity,\r\n  DeleteEntry,\r\n} from \"../Food-Query\";\r\n\r\nexport default function JournalItem({\r\n  Food: { food_name, type, calories, carbohydrates, proteins, fats },\r\n  count,\r\n  date,\r\n}) {\r\n  const [deleteEntry, { data3 }] = useMutation(DeleteEntry, {\r\n    refetchQueries: [\"EntryQuery\"],\r\n  });\r\n  const [addQuantity, { data2 }] = useMutation(AddQuantity, {\r\n    refetchQueries: [\"EntryQuery\"],\r\n  });\r\n  const [minusQuantity, { data }] = useMutation(\r\n    MinusQuantity,\r\n    {\r\n      update: (cache, qe) => {\r\n        console.log(qe.data.updateEntryMinus.food_entry);\r\n        if (qe.data.updateEntryMinus.quantity === 0) {\r\n          console.log(\"completed\");\r\n          deleteEntry({\r\n            variables: {\r\n              food_entry: qe.data.updateEntryMinus.food_entry,\r\n              date: date,\r\n            },\r\n          });\r\n        }\r\n      },\r\n    },\r\n    {\r\n      refetchQueries: [\"EntryQuery\"],\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Row className=\" align-items-center border-col \" style={{ height: \"50px\" }}>\r\n      <Col>{food_name}</Col>\r\n      <Col>{carbohydrates * count}</Col>\r\n      <Col>{fats * count}</Col>\r\n      <Col>{proteins * count}</Col>\r\n      <Col>{calories * count}</Col>\r\n      <Col>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() =>\r\n            minusQuantity({\r\n              variables: { food_entry: food_name, date: date },\r\n              context: {\r\n                headers: {\r\n                  authentication: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n              },\r\n            })\r\n          }\r\n        >\r\n          <FontAwesomeIcon icon={faMinus} />\r\n        </Button>\r\n        {count}\r\n\r\n        <Button\r\n          style={{ marginRight: \"30px\" }}\r\n          variant=\"primary\"\r\n          onClick={() =>\r\n            addQuantity({\r\n              variables: { food_entry: food_name, date: date },\r\n              context: {\r\n                headers: {\r\n                  authentication: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n              },\r\n            })\r\n          }\r\n        >\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </Button>\r\n        <Button\r\n          variant=\"danger\"\r\n          onClick={() =>\r\n            deleteEntry({\r\n              variables: {\r\n                food_entry: food_name,\r\n                date: date,\r\n              },\r\n              context: {\r\n                headers: {\r\n                  authentication: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n              },\r\n            })\r\n          }\r\n        >\r\n          <FontAwesomeIcon icon={faTimes} />\r\n        </Button>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React, { createContext, useReducer, useContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst AuthStateContext = createContext();\r\nconst AuthDispatchContext = createContext();\r\n\r\nlet user = null;\r\nconst token = localStorage.getItem(\"token\");\r\nif (token) {\r\n  const decodedToken = jwtDecode(token);\r\n  const expiresAt = new Date(decodedToken.exp * 1000);\r\n\r\n  if (new Date() > expiresAt) {\r\n    localStorage.removeItem(\"token\");\r\n    console.log(\"expired\");\r\n  } else {\r\n    user = decodedToken;\r\n  }\r\n} else console.log(\"No token found\");\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case \"LOGOUT\":\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n    default:\r\n      throw new Error(`Unknown action type: ${action.type}`);\r\n  }\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, { user });\r\n\r\n  return (\r\n    <AuthDispatchContext.Provider value={dispatch}>\r\n      <AuthStateContext.Provider value={state}>\r\n        {children}\r\n      </AuthStateContext.Provider>\r\n    </AuthDispatchContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuthState = () => useContext(AuthStateContext);\r\nexport const useAuthDispatch = () => useContext(AuthDispatchContext);\r\n","import React, { Fragment, useState, useContext, useEffect } from \"react\";\r\nimport { graphql } from \"@apollo/client/react/hoc\";\r\nimport * as compose from \"lodash.flowright\";\r\nimport { Query, Mutation, Subscription } from \"@apollo/client/react/components\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport {\r\n  UserQuery,\r\n  EntryQuery,\r\n  FoodQueryS,\r\n  EntryQueryS,\r\n  FoodQuery,\r\n  AddFood,\r\n  AddEntry,\r\n  AddQuantity,\r\n  MinusQuantity,\r\n  DeleteEntry,\r\n} from \"../Food-Query\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport \"./journal.css\";\r\nimport moment from \"moment\";\r\nimport { ItemsContext } from \"./home\";\r\nimport JournalItem from \"./journalItem\";\r\nimport { useAuthDispatch } from \"../context/auth\";\r\n\r\nfunction Journal(props) {\r\n  const [count, setCount] = useContext(ItemsContext);\r\n  const [dailyCal, setCal] = useState(undefined);\r\n  const { loading, error, data } = useQuery(EntryQuery, {\r\n    variables: { date: count.format(\"MM-DD-YYYY\") },\r\n    pollInterval: 0.0001,\r\n    context: {\r\n      headers: {\r\n        authentication: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    },\r\n  });\r\n  // if (loading) return \"Loading...\";\r\n  // if (error) {\r\n  //   return `Error! ${error.message}`;\r\n  // }\r\n  const { data: dataR, error: errorR, loading: landingR } = useQuery(\r\n    UserQuery,\r\n    {\r\n      context: {\r\n        headers: {\r\n          authentication: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      },\r\n    }\r\n  );\r\n  // if (landingR) return \"Loading...\";\r\n  // if (errorR) {\r\n  //   console.log(errorR);\r\n  // }\r\n\r\n  const breakfast = data.getEntries.filter(\r\n    (food) =>\r\n      food.food_en.type === \"breakfast\" &&\r\n      food.date === count.format(\"MM-DD-YYYY\")\r\n  );\r\n  const breakfast_sum = breakfast.reduce(function (result, item) {\r\n    return result + item.food_en.calories * item.quantity;\r\n  }, 0);\r\n  const lunch = data.getEntries.filter((food) => food.food_en.type === \"lunch\");\r\n  const lunch_sum = lunch.reduce(function (result, item) {\r\n    return result + item.food_en.calories * item.quantity;\r\n  }, 0);\r\n  const dinner = data.getEntries.filter(\r\n    (food) => food.food_en.type === \"dinner\"\r\n  );\r\n  const dinner_sum = dinner.reduce(function (result, item) {\r\n    return result + item.food_en.calories * item.quantity;\r\n  }, 0);\r\n  const total_calories = data.getEntries.reduce(function (result, item) {\r\n    return result + item.food_en.calories * item.quantity;\r\n  }, 0);\r\n  const total_carbs = data.getEntries.reduce(function (result, item) {\r\n    return result + item.food_en.carbohydrates * item.quantity;\r\n  }, 0);\r\n  const total_fat = data.getEntries.reduce(function (result, item) {\r\n    return result + item.food_en.fats * item.quantity;\r\n  }, 0);\r\n  const total_protein = data.getEntries.reduce(function (result, item) {\r\n    return result + item.food_en.proteins * item.quantity;\r\n  }, 0);\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <div className=\"row\">\r\n                <div className=\"col-sm-2 \">total</div>\r\n                <div className=\"col-sm-2 \">{sum(carbohydrates)}</div>\r\n                <div className=\"col-sm-2 \">{sum(fats)}</div>\r\n                <div className=\"col-sm-2 \">{sum(proteins)}</div>\r\n                <div className=\"col-sm-2 \">{sum(calories)}</div>\r\n              </div> */}\r\n      <Row className=\"border-col align-items-center\" style={{ height: \"50px\" }}>\r\n        <Col className=\"\" style={{}}></Col>\r\n        <Col className=\"\" style={{}}>\r\n          carbohydrates\r\n        </Col>\r\n        <Col className=\"\" style={{}}>\r\n          fats\r\n        </Col>\r\n        <Col className=\"\" style={{}}>\r\n          proteins\r\n        </Col>\r\n        <Col className=\"\" style={{}}>\r\n          calories\r\n        </Col>\r\n        <Col className=\"\" style={{}}></Col>\r\n      </Row>\r\n      <Row\r\n        className=\"text-white border-col align-items-center\"\r\n        style={{ backgroundColor: \"red\", height: \"50px\" }}\r\n      >\r\n        <Col>daily goal</Col>\r\n\r\n        <Col></Col>\r\n      </Row>\r\n      <Row\r\n        className=\"text-white border-col align-items-center\"\r\n        style={{ backgroundColor: \"grey\", height: \"50px\" }}\r\n      >\r\n        <Col>total</Col>\r\n        <Col>{total_carbs}</Col>\r\n        <Col>{total_fat}</Col>\r\n        <Col>{total_protein}</Col>\r\n        <Col>{total_calories}</Col>\r\n        <Col></Col>\r\n      </Row>\r\n      <Row\r\n        className=\"text-white border-col align-items-center\"\r\n        style={{ backgroundColor: \"blue\", height: \"50px\" }}\r\n      >\r\n        <Col>breakfast</Col>\r\n        <Col></Col>\r\n        <Col></Col>\r\n        <Col></Col>\r\n        <Col>{breakfast_sum}</Col>\r\n        <Col></Col>\r\n      </Row>\r\n\r\n      {breakfast.map((food) => (\r\n        <JournalItem\r\n          key={food.food_en.id}\r\n          Food={food.food_en}\r\n          count={food.quantity}\r\n          date={count.format(\"MM-DD-YYYY\")}\r\n        />\r\n      ))}\r\n      <Row\r\n        className=\"text-white border-col align-items-center\"\r\n        style={{ backgroundColor: \"blue\", height: \"50px\" }}\r\n      >\r\n        <Col>lunch</Col>\r\n        <Col></Col>\r\n        <Col></Col>\r\n        <Col></Col>\r\n        <Col>{lunch_sum}</Col>\r\n        <Col></Col>\r\n      </Row>\r\n\r\n      {lunch.map((food) => (\r\n        <JournalItem\r\n          key={food.food_en.id}\r\n          Food={food.food_en}\r\n          count={food.quantity}\r\n          date={count.format(\"MM-DD-YYYY\")}\r\n        />\r\n      ))}\r\n      <Row\r\n        className=\"text-white border-col align-items-center\"\r\n        style={{ backgroundColor: \"blue\", height: \"50px\" }}\r\n      >\r\n        <Col>dinner</Col>\r\n        <Col></Col>\r\n        <Col></Col>\r\n        <Col></Col>\r\n        <Col>{dinner_sum}</Col>\r\n        <Col></Col>\r\n      </Row>\r\n\r\n      {dinner.map((food) => (\r\n        <JournalItem\r\n          key={food.food_en.id}\r\n          Food={food.food_en}\r\n          count={food.quantity}\r\n          date={count.format(\"MM-DD-YYYY\")}\r\n        />\r\n      ))}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Journal;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { useForm } from \"../util/hooks\";\r\n// import Button from \"react-bootstrap/Button\";\r\nimport { LOGIN_USER } from \"../Food-Query\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { NavHashLink as NavLink } from \"react-router-hash-link\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useAuthDispatch } from \"../context/auth\";\r\n\r\nexport default function Register(props) {\r\n  const [variables, setVariables] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const dispatch = useAuthDispatch();\r\n\r\n  const [loginUser, { loading }] = useLazyQuery(LOGIN_USER, {\r\n    onError: (err) => {\r\n      console.log(err);\r\n      setErrors(err.graphQLErrors[0].extensions.errors);\r\n    },\r\n    onCompleted(data) {\r\n      console.log(data);\r\n      dispatch({ type: \"LOGIN\", payload: data.login });\r\n\r\n      props.history.push(\"/\");\r\n    },\r\n  });\r\n\r\n  const submitLoginForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    loginUser({ variables });\r\n  };\r\n\r\n  return (\r\n    <Row className=\"bg-white py-5 justify-content-center\">\r\n      <Col sm={8} md={6} lg={4}>\r\n        <h1 className=\"text-center\">Login</h1>\r\n        <Form onSubmit={submitLoginForm}>\r\n          <Form.Group>\r\n            <Form.Label className={errors.username && \"text-danger\"}>\r\n              {errors.username ?? \"Username\"}\r\n            </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={variables.username}\r\n              className={errors.username && \"is-invalid\"}\r\n              onChange={(e) =>\r\n                setVariables({ ...variables, username: e.target.value })\r\n              }\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label className={errors.password && \"text-danger\"}>\r\n              {errors.password ?? \"Password\"}\r\n            </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={variables.password}\r\n              className={errors.password && \"is-invalid\"}\r\n              onChange={(e) =>\r\n                setVariables({ ...variables, password: e.target.value })\r\n              }\r\n            />\r\n          </Form.Group>\r\n          <div className=\"text-center\">\r\n            <Button variant=\"success\" type=\"submit\" disabled={loading}>\r\n              {loading ? \"loading..\" : \"Login\"}\r\n            </Button>\r\n            <br />\r\n            <small>\r\n              Don't have an account? <NavLink to=\"/register\">Register</NavLink>\r\n            </small>\r\n          </div>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { REGISTER_USER } from \"../Food-Query\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { NavHashLink as NavLink } from \"react-router-hash-link\";\r\n\r\nexport default function Register(props) {\r\n  const [variables, setVariables] = useState({\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [registerUser, { loading }] = useMutation(REGISTER_USER, {\r\n    update: (_, __) => props.history.push(\"/login\"),\r\n    onError: (err) => setErrors(err.graphQLErrors[0].extensions.errors),\r\n  });\r\n\r\n  const submitRegisterForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    registerUser({ variables });\r\n  };\r\n\r\n  return (\r\n    <Row className=\"bg-white py-5 justify-content-center\">\r\n      <Col sm={8} md={6} lg={4}>\r\n        <h1 className=\"text-center\">Register</h1>\r\n        <Form onSubmit={submitRegisterForm}>\r\n          <Form.Group>\r\n            <Form.Label className={errors.email && \"text-danger\"}>\r\n              {errors.email ?? \"Email address\"}\r\n            </Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={variables.email}\r\n              className={errors.email && \"is-invalid\"}\r\n              onChange={(e) =>\r\n                setVariables({ ...variables, email: e.target.value })\r\n              }\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label className={errors.username && \"text-danger\"}>\r\n              {errors.username ?? \"Username\"}\r\n            </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={variables.username}\r\n              className={errors.username && \"is-invalid\"}\r\n              onChange={(e) =>\r\n                setVariables({ ...variables, username: e.target.value })\r\n              }\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label className={errors.password && \"text-danger\"}>\r\n              {errors.password ?? \"Password\"}\r\n            </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={variables.password}\r\n              className={errors.password && \"is-invalid\"}\r\n              onChange={(e) =>\r\n                setVariables({ ...variables, password: e.target.value })\r\n              }\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label className={errors.confirmPassword && \"text-danger\"}>\r\n              {errors.confirmPassword ?? \"Confirm password\"}\r\n            </Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={variables.confirmPassword}\r\n              className={errors.confirmPassword && \"is-invalid\"}\r\n              onChange={(e) =>\r\n                setVariables({\r\n                  ...variables,\r\n                  confirmPassword: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </Form.Group>\r\n          <div className=\"text-center\">\r\n            <Button variant=\"success\" type=\"submit\" disabled={loading}>\r\n              {loading ? \"loading..\" : \"Register\"}\r\n            </Button>\r\n            <br />\r\n            <small>\r\n              Already have an account? <NavLink to=\"/login\">Login</NavLink>\r\n            </small>\r\n          </div>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\r\nimport * as compose from \"lodash.flowright\";\r\nimport { Query, Mutation, Subscription } from \"@apollo/client/react/components\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { EntryQuery, FoodQuery, UserQuery } from \"../Food-Query\";\r\nimport FoodItem from \"./foodItem\";\r\nimport moment from \"moment\";\r\nimport Example from \"./button\";\r\nimport Journal from \"./journal\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import { route } from \"../../server/src/routes/api/auth\";\r\n// import useScript from \"./components/useScript\";\r\nimport \"./home.css\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { useAuthDispatch } from \"../context/auth\";\r\n\r\nimport Login from \"./login\";\r\nimport Header from \"./Header\";\r\nimport Register from \"./register\";\r\nexport const ItemsContext = React.createContext();\r\nexport const JournalContext = React.createContext();\r\nfunction Home({ history }) {\r\n  const dispatch = useAuthDispatch();\r\n  const logout = () => {\r\n    dispatch({ type: \"LOGOUT\" });\r\n    history.push(\"/login\");\r\n  };\r\n  //   const [user, setUser] = useState();\r\n\r\n  //   useEffect(() => {\r\n  //     const from = window.prompt(\"username\");\r\n  //     from && setUser({ from });\r\n  //   }, []);\r\n  // const { loading, error, data } = useQuery(EntryQuery, {\r\n  //   pollInterval: 0.0001,\r\n  // });\r\n  // console.log(data);\r\n  // const [current, setCurrent] = useState(\r\n  //   data.getEntries.map((entry) => entry.food_en)\r\n  // );\r\n  // useEffect(() => {\r\n  //   if (loading === false && data) {\r\n  //     const newarray = data.getEntries.map((entry) => entry.food_en);\r\n  //     console.log(newarray);\r\n  //     setCurrent(newarray);\r\n  //   }\r\n  // }, [loading, data]);\r\n\r\n  const [count, setCount] = useState(moment());\r\n  function handleChange(newValue) {\r\n    setCount(newValue);\r\n  }\r\n  // add usernmae as paramter\r\n  const [getUser, { loading: userLoading, data: userData }] = useLazyQuery(\r\n    UserQuery\r\n  );\r\n  getUser();\r\n  const { loading, error, data } = useQuery(EntryQuery, {\r\n    variables: { date: count.format(\"MM-DD-YYYY\") },\r\n    pollInterval: 0.0001,\r\n  });\r\n\r\n  if (loading) return null;\r\n  if (error) {\r\n    return `Error! ${error}`;\r\n  }\r\n  const newarray = data.getEntries.map((entry) => entry.food_en.food_name);\r\n\r\n  return (\r\n    //refetch\r\n\r\n    <div className=\"App\">\r\n      <Row className=\"bg-white justify-content-around mb-1\">\r\n        <Link to=\"/login\">\r\n          <Button variant=\"link\">Login</Button>\r\n        </Link>\r\n        <Link to=\"/register\">\r\n          <Button variant=\"link\">Register</Button>\r\n        </Link>\r\n        <Button variant=\"link\" onClick={logout}>\r\n          Logout\r\n        </Button>\r\n      </Row>\r\n      <ItemsContext.Provider value={[count, setCount]}>\r\n        <Example />\r\n        <Journal />\r\n      </ItemsContext.Provider>\r\n      {/* <Query query={EntryQuery}>\r\n        {({ loading, error, data }) => {\r\n          if (loading) return <h4>Loading...</h4>;\r\n          if (error) console.log(error);\r\n\r\n          return (\r\n            <Fragment>\r\n              {data.getEntries.map((food) => (\r\n                <FoodItem key={food.id} Food={food.food_en} />\r\n              ))}\r\n            </Fragment>\r\n          );\r\n        }}\r\n      </Query> */}\r\n      <Query query={FoodQuery} pollInterval={0.0001}>\r\n        {({ loading, error, data }) => {\r\n          if (loading) return <h4>Loading...</h4>;\r\n          if (error) console.log(error);\r\n          console.log(data);\r\n\r\n          const breakfast = data.getFoods.filter(\r\n            (food) =>\r\n              food.type === \"breakfast\" && !newarray.includes(food.food_name)\r\n          );\r\n          // const breakfast_sum = breakfast.reduce(function (result, item) {\r\n          //   return result + item.calories;\r\n          // }, 0);\r\n          const lunch = data.getFoods.filter(\r\n            (food) =>\r\n              food.type === \"lunch\" && !newarray.includes(food.food_name)\r\n          );\r\n          // const lunch_sum = lunch.reduce(function (result, item) {\r\n          //   return result + item.calories;\r\n          // }, 0);\r\n          const dinner = data.getFoods.filter(\r\n            (food) =>\r\n              food.type === \"dinner\" && !newarray.includes(food.food_name)\r\n          );\r\n          // const dinner_sum = dinner.reduce(function (result, item) {\r\n          //   return result + item.calories;\r\n          // }, 0);\r\n          // const total_calories = data.getFoods.reduce(function (result, item) {\r\n          //   return result + item.calories;\r\n          // }, 0);\r\n          // const total_carbs = data.getFoods.reduce(function (result, item) {\r\n          //   return result + item.carbohydrates;\r\n          // }, 0);\r\n          // const total_fat = data.getFoods.reduce(function (result, item) {\r\n          //   return result + item.fats;\r\n          // }, 0);\r\n          // const total_protein = data.getFoods.reduce(function (result, item) {\r\n          //   return result + item.proteins;\r\n          // }, 0);\r\n          // function sum(type) {\r\n          //   const total = data.getFoods.reduce(function (result, item) {\r\n          //     return result + item[type];\r\n          //   }, 0);\r\n          //   return total;\r\n          // }\r\n\r\n          return (\r\n            <Fragment>\r\n              {/* <div className=\"row\">\r\n                <div className=\"col-sm-2 \">total</div>\r\n                <div className=\"col-sm-2 \">{sum(carbohydrates)}</div>\r\n                <div className=\"col-sm-2 \">{sum(fats)}</div>\r\n                <div className=\"col-sm-2 \">{sum(proteins)}</div>\r\n                <div className=\"col-sm-2 \">{sum(calories)}</div>\r\n              </div> */}\r\n              {/* <div className=\"row\">\r\n                <div className=\"col-sm-2 \"></div>\r\n                <div className=\"col-sm-2 \">carbohydrates</div>\r\n                <div className=\"col-sm-2 \">fats</div>\r\n                <div className=\"col-sm-2 \">proteins</div>\r\n                <div className=\"col-sm-2 \">calories</div>\r\n              </div>\r\n              <div\r\n                className=\"row text-white\"\r\n                style={{ backgroundColor: \"grey\" }}\r\n              >\r\n                <div className=\"col-sm-2\">total</div>\r\n                <div className=\"col-sm-2 \">{total_carbs}</div>\r\n                <div className=\"col-sm-2 \">{total_fat}</div>\r\n                <div className=\"col-sm-2 \">{total_protein}</div>\r\n                <div className=\"col-sm-2\">{total_calories}</div>\r\n              </div>\r\n              <div\r\n                className=\"row text-white\"\r\n                style={{ backgroundColor: \"blue\" }}\r\n              >\r\n                <div className=\"col-sm-2\">breakfast</div>\r\n                <div className=\"col-sm-2 \"></div>\r\n                <div className=\"col-sm-2 \"></div>\r\n                <div className=\"col-sm-2 \"></div>\r\n                <div className=\"col-sm-2\">{breakfast_sum}</div>\r\n              </div> */}\r\n              <Row\r\n                className=\"text-white text-center border-col align-items-center\"\r\n                style={{\r\n                  backgroundColor: \"green\",\r\n                  height: \"50px\",\r\n                }}\r\n              >\r\n                <Col>Today's Menu</Col>\r\n              </Row>\r\n              <Row\r\n                className=\"text-white border-col align-items-center\"\r\n                style={{ backgroundColor: \"blue\", height: \"50px\" }}\r\n              >\r\n                <Col>breakfast</Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n              </Row>\r\n\r\n              {breakfast.map((food) => (\r\n                <FoodItem\r\n                  key={food.id}\r\n                  Food={food}\r\n                  date={count.format(\"MM-DD-YYYY\")}\r\n                />\r\n              ))}\r\n              {/* <div\r\n                className=\"row text-white\"\r\n                style={{ backgroundColor: \"blue\" }}\r\n              >\r\n                <div className=\"col-sm-2\">lunch</div>\r\n                <div className=\"col-sm-2 \"></div>\r\n                <div className=\"col-sm-2 \"></div>\r\n                <div className=\"col-sm-2 \"></div>\r\n                <div className=\"col-sm-2\">{lunch_sum}</div>\r\n              </div> */}\r\n              <Row\r\n                className=\"text-white border-col align-items-center\"\r\n                style={{ backgroundColor: \"blue\", height: \"50px\" }}\r\n              >\r\n                <Col>lunch</Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n              </Row>\r\n              {lunch.map((food) => (\r\n                <FoodItem\r\n                  key={food.id}\r\n                  Food={food}\r\n                  date={count.format(\"MM-DD-YYYY\")}\r\n                />\r\n              ))}\r\n              {/* <div\r\n                className=\"row text-white\"\r\n                style={{ backgroundColor: \"blue\" }}\r\n              >\r\n                <div className=\"col-sm-2\">dinner</div>\r\n                <div className=\"col-sm-2 \"></div>\r\n                <div className=\"col-sm-2 \"></div>\r\n                <div className=\"col-sm-2 \"></div>\r\n                <div className=\"col-sm-2\">{dinner_sum}</div>\r\n              </div> */}\r\n              <Row\r\n                className=\"text-white border-col align-items-center\"\r\n                style={{ backgroundColor: \"blue\", height: \"50px\" }}\r\n              >\r\n                <Col>dinner</Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n              </Row>\r\n              {dinner.map((food) => (\r\n                <FoodItem\r\n                  key={food.id}\r\n                  Food={food}\r\n                  date={count.format(\"MM-DD-YYYY\")}\r\n                />\r\n              ))}\r\n            </Fragment>\r\n          );\r\n        }}\r\n      </Query>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { Fragment, useState, useContext, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { ItemsContext } from \"./home\";\r\nimport moment from \"moment\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Calendar from \"react-calendar\";\r\nimport Popup from \"reactjs-popup\";\r\nimport InfiniteCalendar from \"react-infinite-calendar\";\r\nimport \"react-infinite-calendar/styles.css\"; // Make sure to import the default stylesheet\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\nfunction Example(props) {\r\n  const [count, setCount] = useContext(ItemsContext);\r\n  console.log(count);\r\n  // useEffect(() => {\r\n  //   // Update the document title using the browser API\r\n  //   setCount(count);\r\n  // });\r\n  function increment() {\r\n    // Here, we invoke the callback with the new value\r\n    setCount(moment(count).subtract(-1, \"days\"));\r\n    console.log(count.format(\"MM-DD-YYYY\"));\r\n  }\r\n  function decrement() {\r\n    // Here, we invoke the callback with the new value\r\n    setCount(moment(count).subtract(1, \"days\"));\r\n    console.log(count.format(\"MM-DD-YYYY\"));\r\n  }\r\n  function pop() {\r\n    return <Calendar />;\r\n  }\r\n  return (\r\n    <div style={{ marginBottom: \"30px\" }}>\r\n      <ButtonGroup aria-label=\"Basic example\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={decrement}\r\n          className=\"btn btn-primary btn-lg active\"\r\n        >\r\n          <FontAwesomeIcon icon={faArrowLeft} />\r\n        </button>\r\n        {/* <Button onClick={pop} variant=\"primary\" size=\"lg\" active>\r\n        {count.format(\"DD-MM-YYYY\")}\r\n      </Button> */}\r\n        <Popup\r\n          trigger={\r\n            <button type=\"button\" className=\"btn btn-primary btn-lg active\">\r\n              {count.format(\"ddd MM-DD-YYYY\")}\r\n            </button>\r\n          }\r\n          position=\"bottom center\"\r\n        >\r\n          <div>\r\n            <InfiniteCalendar\r\n              onSelect={(date) => setCount(moment(date))}\r\n              width={400}\r\n              height={300}\r\n              disabledDays={[0, 6]}\r\n            />\r\n          </div>\r\n        </Popup>\r\n        <button\r\n          type=\"button\"\r\n          onClick={increment}\r\n          className=\"btn btn-primary btn-lg active\"\r\n        >\r\n          <FontAwesomeIcon icon={faArrowRight} />\r\n        </button>{\" \"}\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Example;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { useAuthState } from \"../context/auth\";\r\n\r\nexport default function DynamicRoute(props) {\r\n  const { user } = useAuthState();\r\n\r\n  if (props.authenticated && !user) {\r\n    return <Redirect to=\"/login\" />;\r\n  } else if (props.guest && user) {\r\n    return <Redirect to=\"/\" />;\r\n  } else {\r\n    return <Route component={props.component} {...props} />;\r\n  }\r\n}\r\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { graphql } from \"@apollo/client/react/hoc\";\nimport { useQuery } from \"@apollo/client\";\nimport * as compose from \"lodash.flowright\";\nimport { Query, Mutation, Subscription } from \"@apollo/client/react/components\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { EntryQuery, FoodQuery, UserQuery } from \"./Food-Query\";\nimport FoodItem from \"./components/foodItem\";\nimport moment from \"moment\";\nimport Example from \"./components/button\";\nimport Journal from \"./components/journal\";\n// import { route } from \"../../server/src/routes/api/auth\";\n// import useScript from \"./components/useScript\";\nimport Login from \"./components/login\";\nimport Header from \"./components/Header\";\nimport Register from \"./components/register\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/home\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { AuthProvider } from \"./context/auth\";\nimport AuthRoute from \"./util/AuthRoute\";\nimport { Container } from \"react-bootstrap\";\nimport Chart from \"./components/chart\";\nimport DynamicRoute from \"./util/DynamicRoute\";\n\nexport const ItemsContext = React.createContext();\nexport const JournalContext = React.createContext();\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <BrowserRouter>\n        <Container className=\"pt-5\">\n          <Switch>\n            <DynamicRoute exact path=\"/\" component={Home} authenticated />\n            <DynamicRoute path=\"/register\" component={Register} guest />\n            <DynamicRoute path=\"/login\" component={Login} guest />\n          </Switch>\n        </Container>\n      </BrowserRouter>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  ApolloClient,\n  split,\n  createHttpLink,\n  ApolloProvider,\n} from \"@apollo/client\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport { InMemoryCache } from \"@apollo/client/cache\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:4000\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authentication: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}